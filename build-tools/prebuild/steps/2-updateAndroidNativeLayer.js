import path from 'path'
import { doInfoStep, androidDir, writeFile, replaceInFile } from '../../utils'

module.exports = function (config) {
  doInfoStep('Update Android native layer', () => {
    const {
      instabug: {
        android: {
          token: instabugToken
        }
      },
      appVersion,
      appBuildNumber,
      appName,
      androidPkg,
      INSTABUG
    } = config

    if (!appName || !androidPkg) {
      throw new Error('Need both "appName" and "androidPkg" config values!')
    }

    doInfoStep('Set package names in AndroidManifest.xml', () => {
      replaceInFile(
        path.join(androidDir(), 'app/src/main/AndroidManifest.xml'),
        /package="(.+)"/g,
        `package="${androidPkg}"`
      )
    })

    doInfoStep('Set build info in app build.gradle', () => {
      replaceInFile(
        path.join(androidDir(), 'app/build.gradle'),
        /applicationId\s+"(.+)"/g,
        `applicationId "${androidPkg}"`
      )

      replaceInFile(
        path.join(androidDir(), 'app/build.gradle'),
        /"build_config_package",\s+"(.+)"/g,
        `"build_config_package", "${androidPkg}"`
      )

      replaceInFile(
        path.join(androidDir(), 'app/build.gradle'),
        /\sversionName\s+"(.+)"/g,
        `versionName "${appVersion}"`
      )

      replaceInFile(
        path.join(androidDir(), 'app/build.gradle'),
        /\sversionCode\s+(.+)/g,
        ` versionCode ${appBuildNumber}`
      )
    })

    doInfoStep('Update strings.xml', () => {
      replaceInFile(
        path.join(androidDir(), 'app/src/main/res/values/strings.xml'),
        /<string name="app_name">(.+)<\/string>/gm,
        `<string name="app_name">${appName}</string>`
      )
    })

    doInfoStep('Write Config.java', () => {
      writeFile(
        path.join(androidDir(), 'app/src/main/java/com/hiddentao/meth/mobile/app/Config.java'),
        `/* This is generated by prebuild */
package com.hiddentao.meth.mobile.app;
public class Config {
  public static final boolean INSTABUG_ENABLED = ${INSTABUG ? 'true' : 'false'};
  public static final String INSTABUG_TOKEN = "${instabugToken}";
  public static final boolean DEBUG = BuildConfig.DEBUG;
}`
      )
    })
  })
}
